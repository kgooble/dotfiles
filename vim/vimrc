" Install vim-plug if not found
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

call plug#begin('~/.vim/plugged')

" adds awesome statusbar
Plug 'Lokaltog/vim-powerline'
" adds file tree
Plug 'preservim/nerdtree'
" automatically end if's with end's etc
Plug 'tpope/vim-endwise'
" vim-rails, the
Plug 'tpope/vim-rails'
" surround stuff with brackets and stuff
Plug 'tpope/vim-surround'

""" Shahrin's Plugins
" CtrlP: fuzzy file search using C-p
Plug 'ctrlpvim/ctrlp.vim'
" GitGutter: Show git statuses next to line numbers
Plug 'airblade/vim-gitgutter'
" Syntastic: highlight syntax errors in code
Plug 'vim-syntastic/syntastic'
" AgVim: Use Ag - the silver searcher - in Vim
Plug 'rking/ag.vim'
" IndentGuides: indent guides!
Plug 'nathanaelkane/vim-indent-guides'

Plug 'elzr/vim-json'

Plug 'plasticboy/vim-markdown'

call plug#end()

" allow backspacing over everything in insert mode
set backspace=indent,eol,start

set backupdir=~/.vim/backup/
set directory=~/.vim/swp/
set history=50 " keep 50 lines of command line history
set ruler  " show the cursor position all the time
set showcmd " display incomplete commands
set incsearch " do incremental searching

" Case-insensitive search by default
set ignorecase
set smartcase

set autoindent

" Softtabs, 2 spaces
set tabstop=2
set shiftwidth=2
set expandtab

" Always display the status line
set laststatus=2

" \ is the leader character
let mapleader = "\\"

" Display extra whitespace
set list listchars=tab:>-,trail:âˆ‘,extends:>,precedes:<

" Numbers
set number
set numberwidth=5

" Tab completion options
set wildmode=list:longest,list:full
set complete=.,t

" Window navigation
nmap <C-J> <C-W><C-J>
nmap <C-K> <C-W><C-K>

" Use qq as alternative for ESC in insert mode
imap qq <Esc>

" Set paste mode when pressing F11.
nnoremap <F5> :set invpaste paste?<CR>
set pastetoggle=<F5>
set showmode

" Typing %% in command-line prompt expands to %:h which expands to the current
" buffer's directory
cnoremap <expr> %% getcmdtype() == ':' ? expand('%:h').'/' : '%%'

set matchpairs+=<:>
set showtabline=2

" Tell NERDTree to expand the tree to show the current file's path
map <Leader>r :NERDTreeFind<CR>:wincmd p<CR>

if executable('ag')
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
endif
